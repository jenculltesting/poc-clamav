apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: test-clamav-update-
spec:
  pipelineSpec:
    tasks:
      - name: create-clamav-db-artifact
        taskSpec:
          description: Downloads a database using a custom image and script, then uploads the result as a trusted artifact.
          params:
            - name: ociStorage
              type: string
            - name: runtimeImage
              type: string
            - name: executionScript
              type: string
          results:
            - name: DB_ARTIFACT
              type: string
          volumes:
            - name: workdir
              emptyDir: {}
          stepTemplate:
            volumeMounts:
              - mountPath: /var/workdir
                name: workdir
          steps:
            - name: update-db-data
              image: $(params.runtimeImage)
              workingDir: /var/workdir
              script: $(params.executionScript)
              computeResources:
                requests:
                  memory: 2Gi
                limits:
                  memory: 4Gi
            - name: create-trusted-artifact
              image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
              args:
                - create
                - --store
                - $(params.ociStorage)
                - $(results.DB_ARTIFACT.path)=/var/workdir/source
              computeResources:
                requests:
                  memory: 2Gi
                limits:
                  memory: 2Gi
        params:
          - name: ociStorage
            value: "quay.io/redhat-user-workloads/rh-ee-jcullina-tenant/poc-clamav-d26f3"
          - name: runtimeImage 
            value: "quay.io/redhat-user-workloads/rh-ee-jcullina-tenant/poc-clamav-d26f3:feca0653bdaa43b533d8bf0493d02dcb37921c03"
          - name: executionScript
            value: |
              #!/bin/sh
              set -ex
              DB_PATH="/var/workdir/source/clamav-db"
              mkdir -p "$DB_PATH"
              chmod -R 777 "$DB_PATH"
              freshclam --datadir="$DB_PATH"
      - name: tag-latest-db
        runAfter:
          - create-clamav-db-artifact
        taskRef:
          params:
            - name: name
              value: apply-tags
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.2@sha256:f44be1bf0262471f2f503f5e19da5f0628dcaf968c86272a2ad6b4871e708448
            - name: kind
              value: task
          resolver: bundles
        params:
          - name: IMAGE_URL
            value: $(tasks.create-clamav-db-artifact.results.DB_ARTIFACT)
          - name: ADDITIONAL_TAGS
            value: "latest"      
  taskRunTemplate:
    serviceAccountName: konflux-integration-runner
